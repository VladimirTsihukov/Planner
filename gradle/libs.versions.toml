[versions]

kotlin = "2.1.0"
compose = "1.7.3"
agp = "8.6.1"
activity-compose = "1.9.3"
coroutines = "1.8.0"
lifecycle-viewmodel-compose = "2.8.4"
moko-res = "0.25.0"
settings = "1.2.0"
koin = "4.0.0"
kotlinx-datetime = "0.6.1"
kotlinx-serialization = "1.7.3"
decompose = "3.3.0-alpha02"
sqldelight = "2.0.1"

[libraries]
date-time = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
compose-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity-compose" }
lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle-viewmodel-compose" }

# Compose Multiplatform
koin-compose = { group = "io.insert-koin", name = "koin-compose", version.ref = "koin" }
koin-compose-viewmodel = { group = "io.insert-koin", name = "koin-compose-viewmodel", version.ref = "koin" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }

kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }

moko-res = { module = "dev.icerock.moko:resources-generator", version.ref = "moko-res" }
resources-core = { module = "dev.icerock.moko:resources", version.ref = "moko-res" }
resources-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "moko-res" }

settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "settings" }

kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-compose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }

sqldelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqldelight" }
sqldelight-coroutines-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight"}
sqldelight-android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight"}
sqldelight-native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight"}
sqldelight-desktop-driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight"}

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
moko-res = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko-res" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight"}

